// Code generated by MockGen. DO NOT EDIT.
// Source: service/nodes_discovery_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	model "node_topology_discovery/model"
	reflect "reflect"
)

// MockNodesDiscoveryService is a mock of NodesDiscoveryService interface
type MockNodesDiscoveryService struct {
	ctrl     *gomock.Controller
	recorder *MockNodesDiscoveryServiceMockRecorder
}

// MockNodesDiscoveryServiceMockRecorder is the mock recorder for MockNodesDiscoveryService
type MockNodesDiscoveryServiceMockRecorder struct {
	mock *MockNodesDiscoveryService
}

// NewMockNodesDiscoveryService creates a new mock instance
func NewMockNodesDiscoveryService(ctrl *gomock.Controller) *MockNodesDiscoveryService {
	mock := &MockNodesDiscoveryService{ctrl: ctrl}
	mock.recorder = &MockNodesDiscoveryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNodesDiscoveryService) EXPECT() *MockNodesDiscoveryServiceMockRecorder {
	return m.recorder
}

// Discover mocks base method
func (m *MockNodesDiscoveryService) Discover(request model.NodesDiscoveryRequest) (model.NodesDiscoveryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Discover", request)
	ret0, _ := ret[0].(model.NodesDiscoveryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Discover indicates an expected call of Discover
func (mr *MockNodesDiscoveryServiceMockRecorder) Discover(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discover", reflect.TypeOf((*MockNodesDiscoveryService)(nil).Discover), request)
}
